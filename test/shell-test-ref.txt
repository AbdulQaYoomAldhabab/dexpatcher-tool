$ dx --dex --output build/source.dex source/build/libs/source.jar

$ dx --dex --output build/patch.dex patch/build/libs/patch.jar

$ dexpatcher --help
DexPatcher Version 1.5.1-barrier by Lanchon
           https://dexpatcher.github.io/
usage: dexpatcher [<option> ...] [--output <patched-dex-or-dir>]
                  <source-dex-apk-or-dir> [<patch-dex-apk-or-dir> ...]
 -?,--help                    print this help message and exit
 -a,--api-level <n>           android api level (default: auto-detect)
    --annotations <package>   package name of DexPatcher annotations
                              (default: 'lanchon.dexpatcher.annotation')
    --compat-dextag           enable support for the deprecated DexTag
    --debug                   output debugging information
    --dry-run                 do not write output files (much faster)
 -J,--multi-dex-jobs <n>      multi-dex thread count (implies: -m -M)
                              (default: available processors up to 4)
 -M,--multi-dex-threaded      multi-threaded multi-dex (implies: -m)
 -m,--multi-dex               enable multi-dex support
    --max-dex-pool-size <n>   maximum size of dex pools (default: 65536)
    --no-auto-ignore          no trivial default constructor auto-ignore
 -o,--output <dex-or-dir>     name of output file or directory
 -P,--path-root <root>        output absolute paths of source code files
 -p,--path                    output relative paths of source code files
 -q,--quiet                   do not output warnings
    --stats                   output timing statistics
 -v,--verbose                 output extra information
    --version                 print version information and exit

$ dexpatcher build/source.dex build/patch.dex --output build/patched.dex --debug
info: read 'build/source.dex'
debug: read 'build/source.dex': 14 types
debug: read 'build/source.dex': dex version '035'
info: read 'build/patch.dex'
debug: read 'build/patch.dex': 13 types
debug: read 'build/patch.dex': dex version '035'
debug: type 'test.Main$FieldPresence': (Main.java:0): edit
debug: type 'test.Main$FieldPresence': instance field 'f:int': (Main.java:0): add
info: type 'test.Main$FieldPresence': direct method '<init>():void': (Main.java:13): implicit ignore of trivial default constructor
debug: type 'test.Main$FieldPresence': direct method '<init>():void': (Main.java:13): ignore
debug: type 'test.Main$FieldUseBoth': (Main.java:0): edit
debug: type 'test.Main$FieldUseBoth': instance field 'f:int': (Main.java:0): add
debug: type 'test.Main$FieldUseBoth': direct method '<init>():void': (Main.java:33): replace
debug: type 'test.Main$FieldUseBoth': direct method 'main(java.lang.String[]):void': (Main.java:35): append
debug: type 'test.Main$FieldUseOne': (Main.java:0): edit
debug: type 'test.Main$FieldUseOne': instance field 'f:int': (Main.java:0): add
debug: type 'test.Main$FieldUseOne': direct method '<init>():void': (Main.java:23): replace
debug: type 'test.Main$FieldUseOne': direct method 'main(java.lang.String[]):void': (Main.java:25): append
debug: type 'test.Main$MethodPrivatePresence': (Main.java:0): edit
info: type 'test.Main$MethodPrivatePresence': direct method '<init>():void': (Main.java:47): implicit ignore of trivial default constructor
debug: type 'test.Main$MethodPrivatePresence': direct method '<init>():void': (Main.java:47): ignore
debug: type 'test.Main$MethodPrivatePresence': virtual method 'm():void': (Main.java:49): add
debug: type 'test.Main$MethodPrivateUseBoth': (Main.java:0): edit
info: type 'test.Main$MethodPrivateUseBoth': direct method '<init>():void': (Main.java:77): implicit ignore of trivial default constructor
debug: type 'test.Main$MethodPrivateUseBoth': direct method '<init>():void': (Main.java:77): ignore
debug: type 'test.Main$MethodPrivateUseBoth': direct method 'main(java.lang.String[]):void': (Main.java:81): append
debug: type 'test.Main$MethodPrivateUseBoth': virtual method 'm():void': (Main.java:79): add
debug: type 'test.Main$MethodPrivateUseOne': (Main.java:0): edit
info: type 'test.Main$MethodPrivateUseOne': direct method '<init>():void': (Main.java:61): implicit ignore of trivial default constructor
debug: type 'test.Main$MethodPrivateUseOne': direct method '<init>():void': (Main.java:61): ignore
debug: type 'test.Main$MethodPrivateUseOne': direct method 'main(java.lang.String[]):void': (Main.java:65): append
debug: type 'test.Main$MethodPrivateUseOne': virtual method 'm():void': (Main.java:63): add
debug: type 'test.Main$MethodStaticPresence': (Main.java:0): edit
info: type 'test.Main$MethodStaticPresence': direct method '<init>():void': (Main.java:41): implicit ignore of trivial default constructor
debug: type 'test.Main$MethodStaticPresence': direct method '<init>():void': (Main.java:41): ignore
debug: type 'test.Main$MethodStaticPresence': virtual method 'm():void': (Main.java:43): add
debug: type 'test.Main$MethodStaticUseBoth': (Main.java:0): edit
info: type 'test.Main$MethodStaticUseBoth': direct method '<init>():void': (Main.java:69): implicit ignore of trivial default constructor
debug: type 'test.Main$MethodStaticUseBoth': direct method '<init>():void': (Main.java:69): ignore
debug: type 'test.Main$MethodStaticUseBoth': direct method 'main(java.lang.String[]):void': (Main.java:73): append
debug: type 'test.Main$MethodStaticUseBoth': virtual method 'm():void': (Main.java:71): add
debug: type 'test.Main$MethodStaticUseOne': (Main.java:0): edit
info: type 'test.Main$MethodStaticUseOne': direct method '<init>():void': (Main.java:53): implicit ignore of trivial default constructor
debug: type 'test.Main$MethodStaticUseOne': direct method '<init>():void': (Main.java:53): ignore
debug: type 'test.Main$MethodStaticUseOne': direct method 'main(java.lang.String[]):void': (Main.java:57): append
debug: type 'test.Main$MethodStaticUseOne': virtual method 'm():void': (Main.java:55): add
debug: type 'test.Main': (Main.java:0): ignore
debug: type 'test.info.package-info': (package-info.java:0): replace
debug: type 'test.info.package-info': (package-info.java:0): replace package non-recursive
debug: type 'test.rec.package-info': (package-info.java:0): remove
debug: type 'test.rec.package-info': (package-info.java:0): remove package recursive
debug: type 'test.rec.package-info': (package-info.java:0): remove type 'test.rec.Rec'
debug: type 'test.rec.package-info': (package-info.java:0): remove type 'test.rec.inner.RecInner'
debug: type 'test.target.package-info': (package-info.java:0): remove
debug: type 'test.target.package-info': target 'test.nonrec.package-info': (package-info.java:0): remove package non-recursive
debug: type 'test.target.package-info': target 'test.nonrec.package-info': (package-info.java:0): remove type 'test.nonrec.NonRec'
info: write 'build/patched.dex'
debug: write 'build/patched.dex': dex version '035'
debug: write 'build/patched.dex': 12 types
0 error(s), 0 warning(s)

$ dex2jar --force --output build/patched-dex2jar.jar build/patched.dex
dex2jar build/patched.dex -> build/patched-dex2jar.jar

--- run source/build/libs/source.jar ---
FieldPresence:
main

FieldUseOne:
main

FieldUseBoth:
static f: 1

MethodStaticPresence:
main

MethodPrivatePresence:
main

MethodStaticUseOne:
static m

MethodPrivateUseOne:
private m

MethodStaticUseBoth:
static m

MethodPrivateUseBoth:
private m

--- end source/build/libs/source.jar ---

--- run build/patched-dex2jar.jar ---
FieldPresence:
java.lang.ClassFormatError: Duplicate field name&signature in class file test/Main$FieldPresence
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:195)
	at test.Main.main(Unknown Source)

FieldUseOne:
java.lang.ClassFormatError: Duplicate field name&signature in class file test/Main$FieldUseOne
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:195)
	at test.Main.main(Unknown Source)

FieldUseBoth:
java.lang.ClassFormatError: Duplicate field name&signature in class file test/Main$FieldUseBoth
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:195)
	at test.Main.main(Unknown Source)

MethodStaticPresence:
java.lang.ClassFormatError: Duplicate method name&signature in class file test/Main$MethodStaticPresence
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:195)
	at test.Main.main(Unknown Source)

MethodPrivatePresence:
java.lang.ClassFormatError: Duplicate method name&signature in class file test/Main$MethodPrivatePresence
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:195)
	at test.Main.main(Unknown Source)

MethodStaticUseOne:
java.lang.ClassFormatError: Duplicate method name&signature in class file test/Main$MethodStaticUseOne
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:195)
	at test.Main.main(Unknown Source)

MethodPrivateUseOne:
java.lang.ClassFormatError: Duplicate method name&signature in class file test/Main$MethodPrivateUseOne
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:195)
	at test.Main.main(Unknown Source)

MethodStaticUseBoth:
java.lang.ClassFormatError: Duplicate method name&signature in class file test/Main$MethodStaticUseBoth
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:195)
	at test.Main.main(Unknown Source)

MethodPrivateUseBoth:
java.lang.ClassFormatError: Duplicate method name&signature in class file test/Main$MethodPrivateUseBoth
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:195)
	at test.Main.main(Unknown Source)

--- end build/patched-dex2jar.jar ---

